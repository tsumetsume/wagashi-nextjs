// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model AdminUser {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  role      String   @default("admin") // admin, super_admin
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("admin_users")
}

model Category {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  products Product[]

  @@map("categories")
}

model Product {
  id                String   @id @default(cuid())
  name              String
  price             Int      // 価格（円）
  categoryId        String
  description       String?  // 商品詳細
  allergyInfo       String?  // アレルギー情報
  calories          Int?     // カロリー
  size              String   // サイズ（2x2, 2x3, 3x3など）
  beforeImagePath   String?  // 配置前画像パス
  afterImagePath    String?  // 配置後画像パス
  enlargedImagePath String?  // 拡大用画像パス
  ingredients       String?  // 原材料名
  nutritionInfo     String?  // 栄養成分表示
  shelfLife         String?  // 日持ち
  storageMethod     String?  // 保存方法
  isActive          Boolean  @default(true)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  stocks   Stock[]

  @@map("products")
}

model Store {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  address     String?
  phone       String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  stocks       Stock[]
  savedLayouts SavedLayout[]

  @@map("stores")
}

model Stock {
  id        String   @id @default(cuid())
  productId String
  storeId   String
  quantity  Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  store   Store   @relation(fields: [storeId], references: [id], onDelete: Cascade)

  @@unique([productId, storeId])
  @@map("stocks")
}

model BoxType {
  id          String   @id @default(cuid())
  size        String   @unique // "10x10", "15x15", "20x20"
  name        String   // "小箱", "中箱", "大箱"
  price       Int      // 箱の価格（円）
  description String?  // 箱の説明
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  savedLayouts SavedLayout[]

  @@map("box_types")
}

model SavedLayout {
  id           String   @id @default(cuid())
  customerCode String   @unique
  storeId      String
  storeName    String
  boxSize      String
  boxTypeId    String?  // BoxTypeへの参照を追加
  layoutData   Json     // 配置データ（placedItems）
  infoSettings Json     // 表示設定
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  expiresAt    DateTime // 有効期限（30日後など）

  store   Store    @relation(fields: [storeId], references: [id], onDelete: Cascade)
  boxType BoxType? @relation(fields: [boxTypeId], references: [id], onDelete: SetNull)

  @@map("saved_layouts")
} 